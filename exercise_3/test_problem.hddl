(define
  (problem problem3_0)
  (:domain test_domain)

  (:objects
    workstation1 - workstation
  )

  (:htn
    :parameters ()
    :subtasks (and
      (task0 (dummy_task workstation1))
      (task1 (dummy_task2 workstation1))
    )
    :ordering (and
      (task0 < task1)
    )
  )

  (:init
    (has_valve workstation1)
    (has_tool workstation1)
  )
)

;; ==================================================================

; (define 
;   (problem test_problem)
;   (:domain test_domain)
  
;   (:objects
;     package_0 - package
;     package_1 - package
;     capacity_0 - capacity_number
;     capacity_1 - capacity_number
;     city_loc_0 - location
;     city_loc_1 - location
;     city_loc_2 - location
;     truck_0 - vehicle
;   )

;   (:htn
;     :parameters ()
;     :subtasks (and
;       (task0 (get_to truck_0 city_loc_2))
;     )
;   )

;   (:init
;     (capacity_predecessor capacity_0 capacity_1)
;     (road city_loc_0 city_loc_1)
;     (road city_loc_1 city_loc_0)
;     (road city_loc_1 city_loc_2)
;     (road city_loc_2 city_loc_1)
;     (at package_0 city_loc_1)
;     (at package_1 city_loc_1)
;     (at truck_0 city_loc_2)
;     (capacity truck_0 capacity_1)
;   )
; )